[{"C:\\react\\calculadora\\src\\index.js":"1","C:\\react\\calculadora\\src\\App.js":"2","C:\\react\\calculadora\\src\\reportWebVitals.js":"3","C:\\react\\calculadora\\src\\main\\Calculator.jsx":"4","C:\\react\\calculadora\\src\\components\\Button.jsx":"5","C:\\react\\calculadora\\src\\components\\Display.jsx":"6"},{"size":552,"mtime":1611332840401,"results":"7","hashOfConfig":"8"},{"size":528,"mtime":499162500000,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3650,"mtime":1611345204348,"results":"11","hashOfConfig":"8"},{"size":444,"mtime":1611332108938,"results":"12","hashOfConfig":"8"},{"size":159,"mtime":1611330381403,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1v18qqf",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},"C:\\react\\calculadora\\src\\index.js",[],["31","32"],"C:\\react\\calculadora\\src\\App.js",[],"C:\\react\\calculadora\\src\\reportWebVitals.js",[],"C:\\react\\calculadora\\src\\main\\Calculator.jsx",["33","34"],"import React, { useState } from 'react';\r\n\r\n// Style\r\nimport './Calculator.css';\r\n\r\n// Components\r\nimport Display from '../components/Display';\r\nimport Button from '../components/Button';\r\n\r\nexport default () => {\r\n\r\n    // Set States\r\n    const [display, setDisplay] = useState('0');\r\n    const [clear, setClear] = useState(false);\r\n    const [operation, setOperation] = useState(null);\r\n    const [values, setValues] = useState([0, 0]);\r\n    const [current, setCurrent] = useState(0);\r\n\r\n    // limpar o Display\r\n    const clearDisplay = () => {\r\n        setDisplay('0');\r\n        setClear(false);\r\n        setOperation(null);\r\n        setValues([0, 0]);\r\n        setCurrent(0);\r\n    };\r\n\r\n    // setar a operation\r\n    const Operation = operationValue => {\r\n        if(current === 0) {\r\n            setOperation(operationValue);\r\n            setCurrent(1);\r\n            setClear(true);\r\n        } else {\r\n            const equals = operationValue === '='\r\n            const currentOperation = operation\r\n\r\n            const DisplayValues = [...values]\r\n\r\n            try {\r\n                DisplayValues[0] = eval(`${DisplayValues[0]} ${currentOperation} ${DisplayValues[1]}`)\r\n            } catch(err) {\r\n                DisplayValues[0] = values[0]\r\n            }\r\n            \r\n            DisplayValues[1] = 0\r\n            \r\n            setDisplay(DisplayValues[0].toString())\r\n            setOperation(equals ? null : operationValue)\r\n            setCurrent(equals ? 0 : 1)\r\n            setClear(!equals)\r\n            setValues(DisplayValues)\r\n        };\r\n    };\r\n\r\n    // adicionar um digito\r\n    const Digit = n => {\r\n\r\n        // para nao incluir mais de um '.'\r\n        if(n === '.' && display.includes('.')) {\r\n            return\r\n        };\r\n\r\n        // regras para limpar o display\r\n        const clearDisplay = display === '0' \r\n            || clear;\r\n\r\n        // pegar o valor corrente\r\n        const currentValue = clearDisplay ? '' : display;\r\n\r\n        // pegar o valor do display\r\n        const displayValue = currentValue + n;\r\n\r\n        // setar os States\r\n        setDisplay(displayValue);\r\n        setClear(false);\r\n\r\n        if(n !== '.') {\r\n            const i = current;\r\n            const newValue = parseFloat(displayValue);\r\n            const valuesDisplay =  [...values];\r\n            valuesDisplay[i] = newValue;\r\n            setValues(valuesDisplay);\r\n\r\n            console.log(values); /* !!!!!! DEBUG !!!!! */\r\n        };\r\n\r\n        \r\n        \r\n\r\n    };\r\n\r\n    const addDigit = n => Digit(n);\r\n    const addOperation = op => Operation(op);\r\n\r\n    return (\r\n        <div className=\"calculator\">\r\n            <Display value={display} />\r\n            <Button label=\"AC\" click={() => clearDisplay()} triple/>\r\n            <Button label=\"/\" click={addOperation} operation/>\r\n            <Button label=\"7\" click={addDigit} />\r\n            <Button label=\"8\" click={addDigit}/>\r\n            <Button label=\"9\" click={addDigit}/>\r\n            <Button label=\"*\" click={addOperation} operation/>\r\n            <Button label=\"4\" click={addDigit}/>\r\n            <Button label=\"5\" click={addDigit}/>\r\n            <Button label=\"6\" click={addDigit}/>\r\n            <Button label=\"-\" click={addOperation} operation/>\r\n            <Button label=\"1\" click={addDigit}/>\r\n            <Button label=\"2\" click={addDigit}/>\r\n            <Button label=\"3\" click={addDigit}/>\r\n            <Button label=\"+\" click={addOperation} operation/>\r\n            <Button label=\"0\" click={addDigit} double/>\r\n            <Button label=\".\" click={addDigit}/>\r\n            <Button label=\"=\" click={addOperation} operation/>\r\n\r\n        </div>\r\n    );\r\n};","C:\\react\\calculadora\\src\\components\\Button.jsx",["35","36"],"import React from 'react'\r\nimport Button from './Button.css'\r\n\r\nexport default props => {\r\n    let classes = 'button '\r\n    classes += props.operation ? 'operation': ''\r\n    classes += props.triple ? 'triple': ''\r\n    classes += props.double ? 'double': ''\r\n\r\n    return (\r\n        <button className={classes}\r\n            onClick={e => props.click && props.click(props.label)}\r\n        >\r\n            {props.label}\r\n        </button>\r\n    )\r\n}","C:\\react\\calculadora\\src\\components\\Display.jsx",["37"],"import React from 'react'\r\nimport './Display.css'\r\n\r\nexport default props => {\r\n    return (\r\n        <div className=\"display\">{props.value}</div>\r\n    )   \r\n}",["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":10,"column":1,"nodeType":"46","endLine":119,"endColumn":3},{"ruleId":"47","severity":1,"message":"48","line":41,"column":36,"nodeType":"49","messageId":"50","endLine":41,"endColumn":40},{"ruleId":"51","severity":1,"message":"52","line":2,"column":8,"nodeType":"53","messageId":"54","endLine":2,"endColumn":14},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":17,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":8,"endColumn":2},{"ruleId":"40","replacedBy":"55"},{"ruleId":"42","replacedBy":"56"},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-eval","eval can be harmful.","CallExpression","unexpected","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar",["57"],["58"],"no-global-assign","no-unsafe-negation"]